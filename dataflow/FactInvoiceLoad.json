{
	"name": "FactInvoiceLoad",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable4",
						"type": "DatasetReference"
					},
					"name": "SalesStg"
				},
				{
					"dataset": {
						"referenceName": "FactInvoice",
						"type": "DatasetReference"
					},
					"name": "FctInvoice"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable9",
						"type": "DatasetReference"
					},
					"name": "OrphanInvoice"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable10",
						"type": "DatasetReference"
					},
					"name": "CustomerDim"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable12",
						"type": "DatasetReference"
					},
					"name": "LoadinOrphan"
				},
				{
					"dataset": {
						"referenceName": "FactInvoice12",
						"type": "DatasetReference"
					},
					"name": "FactInvoice"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "union1"
				},
				{
					"name": "split1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "select1"
				},
				{
					"name": "join2"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     DI_JOB_ID as string (\"10\")",
				"}",
				"source(output(",
				"          INVOICEID as decimal(30,0),",
				"          CUSTOMERID as decimal(30,0),",
				"          INVOICEDATE as date,",
				"          SHIPTO as string,",
				"          SHIPTOCITY as string,",
				"          SHIPTOCOUNTRY as string,",
				"          SALESPERSONID as string,",
				"          SALESPERSONNAME as string,",
				"          TOTALPRODUCTCOUNT as decimal(10,4),",
				"          TOTAL as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> SalesStg",
				"source(output(",
				"          MAXINVOICESK as decimal(30,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'SELECT NVL(MAX(Invoice_SK),0) as MaxInvoiceSK from demo_schema.fct_invoice',",
				"     format: 'query') ~> FctInvoice",
				"source(output(",
				"          INVOICEID as decimal(30,0),",
				"          CUSTOMERID as decimal(30,0),",
				"          INVOICEDATE as date,",
				"          SHIPTO as string,",
				"          SHIPTOCITY as string,",
				"          SHIPTOCOUNTRY as string,",
				"          SALESPERSONID as string,",
				"          SALESPERSONNAME as string,",
				"          TOTALPRODUCTCOUNT as decimal(10,4),",
				"          TOTAL as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> OrphanInvoice",
				"source(output(",
				"          CUSTOMER_SK as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          CUSTOMER_NAME as string,",
				"          DI_CREATEDDT as timestamp,",
				"          PID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> CustomerDim",
				"union1, CustomerDim join(CUSTOMERID == CUSTOMER_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"SalesStg, OrphanInvoice union(byName: true)~> union1",
				"join1 split(!isNull(CUSTOMER_ID),",
				"     disjoint: false) ~> split1@(Valid1, Orphan)",
				"split1@Valid1 keyGenerate(output(RowNum as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 select(mapColumn(",
				"          INVOICE_ID = INVOICEID,",
				"          CUSTOMER_SK,",
				"          INVOICE_DT = INVOICEDATE,",
				"          TOTAL_PRODUCT_CNT = TOTALPRODUCTCOUNT,",
				"          TOTAL_PRODUCT_COST = TOTAL,",
				"          RowNum",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, FctInvoice join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 derive(INVOICE_SK = MAXINVOICESK + RowNum,",
				"          DI_CREATEDDT = currentDate(),",
				"          PID = $DI_JOB_ID) ~> derivedColumn1",
				"split1@Orphan sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          INVOICEID,",
				"          CUSTOMERID,",
				"          INVOICEDATE,",
				"          SHIPTO,",
				"          SHIPTOCITY,",
				"          SHIPTOCOUNTRY,",
				"          SALESPERSONID,",
				"          SALESPERSONNAME,",
				"          TOTALPRODUCTCOUNT,",
				"          TOTAL",
				"     )) ~> LoadinOrphan",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          INVOICE_SK,",
				"          INVOICE_ID,",
				"          CUSTOMER_SK,",
				"          INVOICE_DT,",
				"          TOTAL_PRODUCT_CNT,",
				"          TOTAL_PRODUCT_COST,",
				"          DI_CREATEDDT,",
				"          PID",
				"     )) ~> FactInvoice"
			]
		}
	}
}