{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Stage_Source",
						"type": "DatasetReference"
					},
					"name": "sourceStage"
				},
				{
					"dataset": {
						"referenceName": "SourceDim",
						"type": "DatasetReference"
					},
					"name": "SourceDim"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SourceDim",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     DI_JOB_ID as string (\"10\")",
				"}",
				"source(output(",
				"          CUSTOMERID as decimal(30,0),",
				"          CUSTOMERNAME as string,",
				"          BILLTO as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceStage",
				"source(output(",
				"          MAXCUSTOMERSK as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'SELECT NVL(MAX(customer_SK),0) as MaxCustomerSK from demo_schema.dim_customer',",
				"     format: 'query') ~> SourceDim",
				"sourceStage, SourceDim join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 aggregate(groupBy(CUSTOMERID,",
				"          CUSTOMERNAME,",
				"          MAXCUSTOMERSK),",
				"     CountRow = count(CUSTOMERID)) ~> aggregate1",
				"aggregate1 keyGenerate(output(RowNum as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(CUSTOMER_SK = MAXCUSTOMERSK + RowNum,",
				"          DI_CREATEDDT = currentDate(),",
				"          PID = $DI_JOB_ID) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          CUSTOMER_ID = CUSTOMERID,",
				"          CUSTOMER_NAME = CUSTOMERNAME,",
				"          CUSTOMER_SK,",
				"          DI_CREATEDDT,",
				"          PID",
				"     )) ~> sink1"
			]
		}
	}
}